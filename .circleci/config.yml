version: 2.1

executors:
  ruby:
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASS: postgres
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 06b784c7df61a8978ec796c2acbbf9c686eb701e336fba3900b997427b06076b
      - image: circleci/postgres:12-alpine
        environment:
          POSTGRES_USER: pgrails
          POSTGRES_DB: pg_rails_test
          POSTGRES_PASSWORD: pgrails
      - image: circleci/redis
commands:
  bundle_install:
    description: Install Ruby dependencies with Bundler
    steps:
      - restore_cache:
          keys:
            - bundle-v1-{{ arch }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
            - bundle-v1-{{ arch }}-{{ checksum ".ruby-version" }}-
      - run: sudo apt-get --allow-releaseinfo-change update && sudo apt-get install -y libmagic-dev
      - run:
          name: Install Ruby Dependencies
          command: |
            gem install bundler -v 2.1.4 --conservative --no-document
            bundle config --local deployment true
            bundle config --local path vendor/bundle
            bundle config --local without production
            bundle check || (bundle install --jobs=4 --retry=3 && bundle clean)
      - save_cache:
          paths:
            - ./vendor/bundle
          key: bundle-v1-{{ arch }}-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
  set_up_database:
    steps:
      - run:
          name: Set Up Database
          command: |
            bundle exec rake db:schema:load

jobs:
  static_analysis:
    executor: ruby
    steps:
      - checkout
      - bundle_install
      - run:
          name: Run Overcommit
          command: |
            gem install overcommit
            git config --local user.name "Circle CI"
            git config --local user.email ci@example.com
            overcommit --sign
            overcommit --run
      - run:
          name: Run Security Audits
          command: |
            bundle exec brakeman -q --no-summary
            bundle exec bundle-audit check --update -v
  test:
    executor: ruby
    steps:
      - checkout
      - bundle_install
      - set_up_database
      - run:
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
workflows:
  commit-workflow:
    jobs:
      - static_analysis
      - test:
          requires:
            - static_analysis
