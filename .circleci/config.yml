---
version: 2.1
# orbs:
#   codecov: codecov/codecov@1.1.1
jobs:
  build:
    working_directory: ~/pg_rails
    docker:
      - image: circleci/ruby:2.7.2-node
        environment:
          PGHOST: localhost
          PGUSER: pgrails
          RAILS_ENV: test
          BUNDLE_PATH: vendor/bundle
          CC_TEST_REPORTER_ID: 06b784c7df61a8978ec796c2acbbf9c686eb701e336fba3900b997427b06076b
      - image: postgres:9.5
        environment:
          POSTGRES_USER: pgrails
          POSTGRES_DB: pg_rails_test
          POSTGRES_PASSWORD: pgrails
      # - image: circleci/node:10.16.3
    steps:
      - checkout



      # Restore Cached Dependencies
      - restore_cache:
          keys:
            - pg_rails-1-{{ checksum "Gemfile.lock" }}


      # Instalar bundler
      - run: gem install bundler

      # Bundle install dependencies
      - run: bundle install

      # Cache Dependencies
      - save_cache:
          key: pg_rails-1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup the environment
      # - run: cp .sample.env .env

      # Setup the database
      - run: bundle exec rake db:schema:load


      # name: Setup Code Climate test-reporter
      # download test reporter as a static binary
      - run:
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # name: Run tests
      - run:
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      # - codecov/upload:
      #     file: coverage/.resultset.json
      #     token: 'ecbbd491-7d97-48cd-9f9e-35816ede8e6b'
workflows:
  build-test:
    jobs:
      - build
